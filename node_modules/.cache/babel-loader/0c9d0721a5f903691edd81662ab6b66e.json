{"ast":null,"code":"import _classCallCheck from \"/home/kuliza-438/Desktop/hashout/my-search/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kuliza-438/Desktop/hashout/my-search/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kuliza-438/Desktop/hashout/my-search/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kuliza-438/Desktop/hashout/my-search/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kuliza-438/Desktop/hashout/my-search/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/kuliza-438/Desktop/hashout/my-search/src/App.js\";\nimport React, { Component } from 'react'; // import Post from './components/post';\n// import Search from './components/search';\n// import './App.css';\n// class App extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state ={\n//       posts :[],\n//       totalPost:'',\n//       searchValue:''\n//     }\n//   }\n//   componentWillMount(){\n//     fetch('https://jsonplaceholder.typicode.com/posts')\n//     .then(res => res.json())\n//     .then(data => this.setState({posts:data , totalPost: data.length}));\n//   }\n//   render() { \n//     return (\n//      <div className=\"app\">\n//        {this.state.totalPost} Results\n//        <Search />\n//        <hr />\n//        <Post data={this.state.posts}/>\n//      </div>\n//     );\n//   }\n// }\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      query: null,\n      peoples: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.serachPeople(this.state.query);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      var _this2 = this;\n\n      this.setState({\n        query: e.target.value\n      }, function () {\n        if (_this2.state.query && _this2.state.query.length > 1) {\n          if (_this2.state.query.length % 2 === 0) {\n            _this2.serachPeople(_this2.state.query);\n          }\n        } else {\n          _this2.serachPeople(_this2.state.query);\n        }\n      });\n    }\n  }, {\n    key: \"serachPeople\",\n    value: function serachPeople(query) {\n      var _this3 = this;\n\n      var url = \"https://jsonplaceholder.typicode.com/posts\";\n\n      if (query) {\n        // if get value ion query so filter the data based on the query.\n        fetch(url, {\n          method: 'GET'\n        }).then(function (results) {\n          return results.json();\n        }).then(function (data) {\n          var peoples = data.results.filter(function (people) {\n            return people.name === query;\n          }).map(function (people) {\n            return React.createElement(\"ul\", {\n              key: people.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }, React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }, people.title));\n          });\n\n          _this3.setState({\n            peoples: peoples\n          });\n\n          console.log(\"state\", peoples);\n        });\n      } else {\n        fetch(url, {\n          method: 'GET'\n        }).then(function (results) {\n          return results.json();\n        }).then(function (data) {\n          var peoples = data.results.map(function (people) {\n            return React.createElement(\"ul\", {\n              key: people.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            }, people.name));\n          });\n\n          _this3.setState({\n            peoples: peoples\n          });\n\n          console.log(\"state\", peoples);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"search-box\",\n        placeholder: \"Search for...\",\n        onChange: this.onChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), this.state.peoples);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/kuliza-438/Desktop/hashout/my-search/src/App.js"],"names":["React","Component","App","props","state","query","peoples","serachPeople","e","setState","target","value","length","url","fetch","method","then","results","json","data","filter","people","name","map","id","title","console","log","onChange","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import Post from './components/post';\n// import Search from './components/search';\n// import './App.css';\n\n// class App extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state ={\n//       posts :[],\n//       totalPost:'',\n//       searchValue:''\n//     }\n\n//   }\n//   componentWillMount(){\n//     fetch('https://jsonplaceholder.typicode.com/posts')\n//     .then(res => res.json())\n//     .then(data => this.setState({posts:data , totalPost: data.length}));\n//   }\n//   render() { \n//     return (\n//      <div className=\"app\">\n//        {this.state.totalPost} Results\n//        <Search />\n//        <hr />\n//        <Post data={this.state.posts}/>\n//      </div>\n//     );\n//   }\n// }\nclass App extends Component {\n  \n      constructor(props) {\n          super(props)\n          this.state = {\n              query: null,\n              peoples: [],\n          }\n      }\n  \n  \n      componentDidMount() {\n          this.serachPeople(this.state.query);\n      }\n  \n      onChange(e) {\n          this.setState({ query: e.target.value }, () => {\n              if (this.state.query && this.state.query.length > 1) {\n                  if (this.state.query.length % 2 === 0) {\n                      this.serachPeople(this.state.query);\n                  }\n              } else {\n                  this.serachPeople(this.state.query);\n              }\n          })\n      }\n  \n      serachPeople(query) {\n          const url = \"https://jsonplaceholder.typicode.com/posts\";\n  \n          if (query) {\n              // if get value ion query so filter the data based on the query.\n              fetch(url, {\n                  method: 'GET'\n              }).then(results => {\n                  return results.json();\n              }).then(data => {\n                  let peoples = data.results.filter(people => people.name === query).map((people) => {\n                      return (\n                          <ul key={people.id}>\n                              <li>{people.title}</li>\n                          </ul>\n                      )\n                  })\n                  this.setState({ peoples: peoples });\n                  console.log(\"state\", peoples)\n              })\n          } else {\n              fetch(url, {\n                  method: 'GET'\n              }).then(results => {\n                  return results.json();\n              }).then(data => {\n                  let peoples = data.results.map((people) => {\n                      return (\n                          <ul key={people.name}>\n                              <li>{people.name}</li>\n                          </ul>\n                      )\n                  })\n                  this.setState({ peoples: peoples });\n                  console.log(\"state\", peoples)\n              })\n          }\n      }\n  \n      render() {\n          return (\n              <form>\n                  <input\n                      type=\"text\"\n                      className=\"search-box\"\n                      placeholder=\"Search for...\"\n                      onChange={this.onChange.bind(this)}\n                  />\n                  {this.state.peoples}\n              </form>\n          )\n      }\n  }\n  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}