{"ast":null,"code":"import _classCallCheck from \"/home/kuliza-438/Desktop/hashout/my-search/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kuliza-438/Desktop/hashout/my-search/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kuliza-438/Desktop/hashout/my-search/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kuliza-438/Desktop/hashout/my-search/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kuliza-438/Desktop/hashout/my-search/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/kuliza-438/Desktop/hashout/my-search/src/App.js\";\nimport React, { Component } from 'react'; // import Post from './components/post';\n// import Search from './components/search';\n// import './App.css';\n// class App extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state ={\n//       posts :[],\n//       totalPost:'',\n//       searchValue:''\n//     }\n//   }\n//   componentWillMount(){\n//     fetch('https://jsonplaceholder.typicode.com/posts')\n//     .then(res => res.json())\n//     .then(data => this.setState({posts:data , totalPost: data.length}));\n//   }\n//   render() { \n//     return (\n//      <div className=\"app\">\n//        {this.state.totalPost} Results\n//        <Search />\n//        <hr />\n//        <Post data={this.state.posts}/>\n//      </div>\n//     );\n//   }\n// }\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.token = null;\n    _this.state = {\n      query: \"\",\n      people: []\n    };\n\n    _this.onChange = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        query: value\n      });\n\n      _this.search(value);\n    };\n\n    _this.search = function (query) {\n      var url = \"https://jsonplaceholder.typicode.com/posts\";\n      var token = {};\n      _this.token = token;\n      fetch(url).then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        if (_this.token === token) {\n          _this.setState({\n            people: data.results\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.search(\"\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"search-box\",\n        placeholder: \"Search for...\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), this.state.people.map(function (person) {\n        return React.createElement(\"ul\", {\n          key: person.is,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, person.title));\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/kuliza-438/Desktop/hashout/my-search/src/App.js"],"names":["React","Component","App","token","state","query","people","onChange","e","value","target","setState","search","url","fetch","then","results","json","data","map","person","is","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ,I;UACRC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE;AAFF,K;;UAKRC,Q,GAAW,UAAAC,CAAC,EAAI;AAAA,UACNC,KADM,GACID,CAAC,CAACE,MADN,CACND,KADM;;AAEd,YAAKE,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAEI;AADK,OAAd;;AAIA,YAAKG,MAAL,CAAYH,KAAZ;AACD,K;;UAEDG,M,GAAS,UAAAP,KAAK,EAAI;AAChB,UAAMQ,GAAG,+CAAT;AACA,UAAMV,KAAK,GAAG,EAAd;AACA,YAAKA,KAAL,GAAaA,KAAb;AAEAW,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,IAAR,EAAJ;AAAA,OADf,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,YAAI,MAAKf,KAAL,KAAeA,KAAnB,EAA0B;AACxB,gBAAKQ,QAAL,CAAc;AAAEL,YAAAA,MAAM,EAAEY,IAAI,CAACF;AAAf,WAAd;AACD;AACF,OANH;AAOD,K;;;;;;;wCAEmB;AAClB,WAAKJ,MAAL,CAAY,EAAZ;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,WAAW,EAAC,eAHd;AAIE,QAAA,QAAQ,EAAE,KAAKL,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOG,KAAKH,KAAL,CAAWE,MAAX,CAAkBa,GAAlB,CAAsB,UAAAC,MAAM;AAAA,eAC3B;AAAI,UAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,MAAM,CAACE,KAAZ,CADF,CAD2B;AAAA,OAA5B,CAPH,CADF;AAeD;;;;EAlDerB,S;;AAqDlB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import Post from './components/post';\n// import Search from './components/search';\n// import './App.css';\n\n// class App extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state ={\n//       posts :[],\n//       totalPost:'',\n//       searchValue:''\n//     }\n\n//   }\n//   componentWillMount(){\n//     fetch('https://jsonplaceholder.typicode.com/posts')\n//     .then(res => res.json())\n//     .then(data => this.setState({posts:data , totalPost: data.length}));\n//   }\n//   render() { \n//     return (\n//      <div className=\"app\">\n//        {this.state.totalPost} Results\n//        <Search />\n//        <hr />\n//        <Post data={this.state.posts}/>\n//      </div>\n//     );\n//   }\n// }\nclass App extends Component {\n  token = null;\n  state = {\n    query: \"\",\n    people: []\n  };\n\n  onChange = e => {\n    const { value } = e.target;\n    this.setState({\n      query: value\n    });\n\n    this.search(value);\n  };\n\n  search = query => {\n    const url = `https://jsonplaceholder.typicode.com/posts`;\n    const token = {};\n    this.token = token;\n\n    fetch(url)\n      .then(results => results.json())\n      .then(data => {\n        if (this.token === token) {\n          this.setState({ people: data.results });\n        }\n      });\n  };\n\n  componentDidMount() {\n    this.search(\"\");\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          className=\"search-box\"\n          placeholder=\"Search for...\"\n          onChange={this.onChange}\n        />\n        {this.state.people.map(person => (\n          <ul key={person.is}>\n            <li>{person.title}</li>\n          </ul>\n        ))}\n      </form>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}